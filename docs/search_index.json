[
["index.html", "Notes personnelles : Principes stats, procédures et outils avec R 1 Préambule", " Notes personnelles : Principes stats, procédures et outils avec R Nicolas Bressoud 06 June, 2020 1 Préambule Ce livre a comme objectifs de garder traces des apprentissages réalisés simultanément en stats ainsi qu’en utilisation de R pour les analyses et le rapport des résultats. Il sert donc avant tout de mémoire à l’auteur. On insistera particulièrement sur les bonnes pratiques, les sources pertinentes, et quelques traces de scripts. "],
["environnement-de-travail.html", "2 Environnement de travail 2.1 GitHub et structure des dossiers locaux 2.2 RStudio et packages 2.3 Sublime Text et Packages.", " 2 Environnement de travail La configuration de travail implique GitHub, RStudio, Sublime Text. 2.1 GitHub et structure des dossiers locaux explication, avantages, inconvénients On dispose d’un compte chez GitHub. Le compte est lié à 3 machines (2 macbooks et un pc). Le commit et le push se réalisent depuis RStudio directement. Sur chaque machine, on dispose d’une structure de type Documents &gt; GitHub &gt; r-projects (attention à la casse). Le dossier r-projects contient autant de sous-dossiers que de projets à analyser. Chaque sous-dossier a un nom structuré ainsi (attention à la casse) : contexteannée_initialesauteurprincipal (par exemple : dupp2019_cr). Dans chaque sous-dossier: un fichier Rproj est disponible et il porte le nom du sous-dossier un fichier présentant les données brutes (raw) est disponible (en lecture seule de préférence) et il porte un titre de la forme nomsousdossier_raw. Il peut être en format .csv ou .xlsx. un fichier de script .R intitulé nomsousdossier_script un fichier Rmarkdown .Rmd intitulé nomsousdossier_rapport les sorties de type HTML, pdf, ou image (png, svg) n’obéissent pas à des règles précises. L’esprit est d’avoir à tout moment sur GitHub une vision claire des modifications réalisées à travers les différentes étapes de mise à jour des fichier (traçabilité de la démarche). De plus, une attention particulière est accordée à l’écriture d’un code lisible et commenté, que ce soit dans le script ou dans le rapport Rmarkdown. Le script et le rapport se rédigent en parallèle. 2.2 RStudio et packages On dispose en l’état de la version 4.0.0 de R ainsi que de la version XXX de RStudio. Les packages suivants sont installés: tidyverse, suite de packages pour travailler de manière tidy (bien rangé) : ggplot2, dplyr, tidyr, readr, purrr, tibble, stringr, forcats. readxl, permet de lire et importer les fichiers .xlsx. bookdown, permet de réaliser à peu de frais le présent livre 2.3 Sublime Text et Packages. L’utilisation de Sublime Tex est ergonomique. Les packages permettent de travailler comme R Studio, avec toutefois un environnement plus aéré et propice à la rédaction. Il est complémentaire à RStudio mais et peut le remplacer pour certaines courtes étapes de rédaction. Les packages installés sont: sur PC : R-Box, R-IDE, LSP sur MAC : XXX GitHub sur Sublime Text ??? Emmet, git, sublime github. https://gist.github.com/KedrikG/f7b955dc371b1204ec76ce862e2dcd2e "],
["préparation-des-données.html", "3 Préparation des données 3.1 Bonnes pratiques dans le système de récolte des données (Qualtrics, …)", " 3 Préparation des données bonnes pratiques et exemples et sources 3.1 Bonnes pratiques dans le système de récolte des données (Qualtrics, …) Chaque questionnaire est identifié par 3 premières lettre significatives, le nombre d’items et un _: exemple : Questionnaire sur la motivation scolaire en 13 items devient mot13_. Ensuite, chacun des items est proprement nommé par ordre d’apparition : exemple : mot13_1, mot13_2, …, mot13_13 Les items à inverser (reverse) sont traités en créant une nouvelle variable : exemple : mot13_4 génère mot13_4rev Les variable rev remplacent celles d’origine dans le nouveau df généré. Cela facilite l’analyse de la cohérence interne ou le calcul des scores par la suite. La variable qui contient le score porte l’extension sco : exemple : mot13_sco est la variable de score total de mot13_1 : mot13_13 sans les variables qui devaient être inversées et en ajoutant les variables rev. "],
["description-des-données.html", "4 Description des données 4.1 Princpes 4.2 Procédures 4.3 Tableaux 4.4 Plots", " 4 Description des données 4.1 Princpes 4.2 Procédures 4.3 Tableaux 4.4 Plots Travail avec Zoe. Notes à intégrer : Réaliser des boxplots avec barres d’erreurs [ ] –&gt; plutôt utiliser select des variables ou filter des participants gather –&gt; 1er argument nom et 2ème argument valeur set.sid dans Rmarkdown pour figer les aléatoires, p.ex. le jitter pour pas que ça change à chaque lancement. installer des kits de couleurs au besoin. shape : les numéros correspondent à des formes de points. geom_line : 3 arguments minimum. avec group. –&gt; pourquoi “group” et pourquoi “1”. Alt + N = ~ jitter –&gt; position et positionjitterdodge pour comparer G et F "],
["rapport.html", "5 Rapport 5.1 Principes 5.2 Procédures clés 5.3 Un mot sur les normes APA 5.4 Un mot sur Bookdown et GitHub", " 5 Rapport 5.1 Principes Avec ressources (fameux document PDF) Ce qui est attendu dans un document de type rapport. 5.2 Procédures clés 5.3 Un mot sur les normes APA 5.4 Un mot sur Bookdown et GitHub "]
]
